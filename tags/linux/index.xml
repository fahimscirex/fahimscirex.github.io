<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Linux on Plugged Into Matrix</title><link>https://fahimscirex.github.io/tags/linux/</link><description>Recent content in Linux on Plugged Into Matrix</description><image><url>https://fahimscirex.github.io/47</url><link>https://fahimscirex.github.io/47</link></image><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 26 Jun 2021 11:22:14 +0600</lastBuildDate><atom:link href="https://fahimscirex.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Set Gtk File Picker</title><link>https://fahimscirex.github.io/bits/set-gtk-file-picker/</link><pubDate>Sat, 26 Jun 2021 11:22:14 +0600</pubDate><guid>https://fahimscirex.github.io/bits/set-gtk-file-picker/</guid><description>Change default file picker of Linux to a GTK based one.</description><content:encoded><![CDATA[<p>I&rsquo;m using Archcraft with bspwm right now. It uses qt applications as default mostly. I don&rsquo;t like the default qt file picker dialog it uses. And couldn&rsquo;t find any good guideline to change the picker. So I&rsquo;m going to write down a workaround I got from <a href="https://github.com/ahmubashshir">@ahmubashshir</a>.</p>
<p>We need some dependencies :</p>
<ul>
<li>qt5ct</li>
<li>kvantum-qt5</li>
<li>xdg-desktop-portal-gtk</li>
</ul>
<p>Create a config file under <code>~/qt5ct/qt5ct.conf</code> with the following content :</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#81a1c1">[</span>Appearance<span style="color:#81a1c1">]</span>
standard_dialogs<span style="color:#81a1c1">=</span>gtk3
style<span style="color:#81a1c1">=</span>kvantum-dark
</code></pre></div><p>Now set the following environment variable at startup.</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#81a1c1">exec</span> QT_QPA_PLATFORMTHEME<span style="color:#81a1c1">=</span>qt5ct
</code></pre></div><p>As I&rsquo;m using bspwm I&rsquo;ve put that on bspwmrc. You can put that on <code>~/.xprofile</code> or something like that if you&rsquo;re using X11.</p>
<p>That&rsquo;s all you need to do. If you don&rsquo;t know anything about environment variable, I suggest you to <a href="https://duck.com">duck</a> about that.</p>
]]></content:encoded></item><item><title>OneDrive Synchronization in Linux</title><link>https://fahimscirex.github.io/bits/onedrive-synchronization/</link><pubDate>Sat, 12 Jun 2021 22:15:05 +0600</pubDate><guid>https://fahimscirex.github.io/bits/onedrive-synchronization/</guid><description>OneDrive doesn&amp;#39;t have any official client for Linux but still you can do the synchronization. Check out how.</description><content:encoded><![CDATA[<p>OneDrive doesn&rsquo;t have any official client in Linux. So after getting a 5TB OneDrive storage I went for two clients</p>
<ul>
<li>
<p><a href="https://github.com/abraunegg/onedrive/">onedrive-abraunegg</a>: abraunegg&rsquo;s fork of OneDrive CLI client by skilion. Basically it does the synchronization part.</p>
</li>
<li>
<p><a href="https://github.com/jstaf/onedriver">onedriver</a> : it has a wicked simple GUI. Onedriver will mount your OneDrive storage as a native Linux file system.</p>
</li>
</ul>
<h2 id="installation">Installation</h2>
<p>Let&rsquo;s install them first. I&rsquo;m going to install onedriver-git, cause it has some extra GUI functions.</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ yay -S onedrive-abraunegg onedriver-git
</code></pre></div><p>For other distribution please check those repo.</p>
<h2 id="authorization">Authorization</h2>
<p><code>onedrive-abraunegg</code> can be run by just entering <code>$ onedrive</code>, it will show a specific link and ask for authorization. I&rsquo;m going to follow that link, complete authorization, copy the URL of that blank authorization page and finally paste it to the terminal.</p>
<p>For <code>onedriver</code> either you can use GUI or terminal. Run <code>$ onedriver -a</code> and Login to OneDrive. Mount the OneDrive storage and enjoy. And we&rsquo;re done with onedriver here, rest of the post is about <code>onedrive</code> or you can say <code>onedrive-abraunegg</code>.</p>
<h2 id="setup">Setup</h2>
<p>We need a config file to use <code>onedrive</code> properly, package comes with a config, we&rsquo;ve to copy that to user config folder.</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ mkdir -p ~/.config/onedrive/
$ cp /usr/share/doc/onedrive/config ~/.config/onedrive/config
</code></pre></div><p>You may want to edit the config file, so that anything doesn&rsquo;t go wrong. I&rsquo;ll suggest you to change <code>sync_dir</code> to different location and <code>upload_only</code> and <code>no_remote_delete</code> to true. But if you&rsquo;re willing to store your cloud data to your local system you should keep <code>upload_only</code> unchanged.</p>
<p>Now put some files in your sync folder or if you already have data in your cloud simply run <code>$ onedrive --synchronization</code> and your sychronization will start. Also you can run <code>$ onedrive -m</code> it will monitor changes in sync directory and will sync automatically.</p>
<p>If you change  the  filters  (skip_file or skip_dir in your configs) you must execute <code>$onedrive --synchronize --resync</code>.</p>
<h2 id="systemd-intigration">Systemd Intigration</h2>
<p>It&rsquo;s convenient to start <code>onedrive</code> as a systemd service.</p>
<p>Enable service as root user</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ systemctl <span style="color:#81a1c1">enable</span> --now onedrive
</code></pre></div><p>Or,</p>
<p>Enable as non-root user (recommended)</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ systemctl --user <span style="color:#81a1c1">enable</span> --now onedrive
</code></pre></div><p>To stop the service</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">$ systemctl --user disable --now onedrive
</code></pre></div><p>If you think you need more detailed instruction for usage check the GitHub <a href="https://github.com/abraunegg/onedrive/blob/master/docs/USAGE.md">repo</a>.</p>
]]></content:encoded></item><item><title>Fix Your Polybar Panel Icon</title><link>https://fahimscirex.github.io/bits/fix-polybar-icon/</link><pubDate>Sun, 23 May 2021 01:53:19 +0600</pubDate><guid>https://fahimscirex.github.io/bits/fix-polybar-icon/</guid><description>If you&amp;#39;re having issues with the size of icons/texts in your panel you can change the size individually. Here&amp;#39;s a how-to guide for you.</description><content:encoded><![CDATA[<p><a href="https://github.com/polybar/polybar">Polybar</a> let&rsquo;s you choose multiple fonts and sizes for your WM panel. So if you&rsquo;re having issues with the size of icons/texts in your panel you can change the size individually. Let&rsquo;s get to the point. How are you supposed to do that?</p>
<p>You&rsquo;ve to define which font you want to use and how you want to customize it&rsquo;s value. So put those values in your Polybar config under <code>[bar/example]</code>. Here&rsquo;s an example config :</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-fallback" data-lang="fallback">[bar/example]
; font-N = &lt;fontconfig pattern&gt;;&lt;vertical offset&gt;
font-0 = &#34;Tamsyn:pixelsize=12;0&#34;
font-1 = &#34;Roboto:size=11:weight=bold;2&#34;
font-2 = &#34;Noto Sans:size=11;1&#34;
font-3 = &#34;Iosevka Nerd Font:size=18;3&#34;
</code></pre></div><p>If you&rsquo;re wondering what the value after semicolon does. It is used to move the font to the up or to the down. Negative value will move it to the down.</p>
<p>Let&rsquo;s assume I&rsquo;m having problem with a Spotify module icon in my panel. That icon is way big than others. So i&rsquo;m gonna fix that by changing the icon font size. Usually <a href="https://nerdfonts.com">Nerd Fonts</a> is used in Polybar to get a icon, so I&rsquo;m gonna choose Iosevka Nerd Font. As you can see I&rsquo;ve added that in the config already.</p>
<p>That Spotify module config looks like this :</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-fallback" data-lang="fallback">[module/spotify-icon]
inherit = module/apps
content = ï†¼
content-font = 3
click-left = env LD_PRELOAD=/usr/lib/spotify-adblock.so spotify %U &amp;
</code></pre></div><p>All you&rsquo;ve to do is, add the <code>content-font</code> value. Here 3 directs to <code>font-3</code>. So, the Spotify module will inherit values from that example bar config which starts with <code>font-3</code>.</p>
<p>That&rsquo;s all! I&rsquo;m linking the Polybar wiki <a href="https://github.com/polybar/polybar/wiki/Fonts">here</a>, just in case you might need it. :D</p>
]]></content:encoded></item><item><title>Setup Warp on Linux and Get Unlimited Warp Plus Data</title><link>https://fahimscirex.github.io/bits/setup-cloudflare-warp/</link><pubDate>Sun, 28 Mar 2021 18:15:05 +0600</pubDate><guid>https://fahimscirex.github.io/bits/setup-cloudflare-warp/</guid><description>Using WARP you can encrypt your DNS requests as well as bypass blocked sites. Here&amp;#39;s how you can get unlimited WARP+ data and use that on Linux.</description><content:encoded><![CDATA[<blockquote>
<p><strong>Update : 23/10/2021</strong> &gt; As there&rsquo;s a official CLI out there, I&rsquo;m updating the post with instructions for that too.</p>
</blockquote>
<p>Cloudflare&rsquo;s Warp is a great service to re-route DNS query and bypass blocked website. <del>Though it has clients for Windows, Mac, Android, IOS it doesn&rsquo;t have a Warp client for Linux. Still we can use an unofficial client to get our work done.</del> It has clients for Windows, Mac, Linux, Android, IOS. You can use it in Linux through the official CLI client or with WGCF.</p>
<h2 id="method-1--warp-desktop-client">Method 1 : WARP Desktop Client</h2>
<p>Head over to <a href="https://pkg.cloudflareclient.com/install">this</a>
page and follow the instructions to setup repository for your distro.</p>
<h3 id="installation">Installation</h3>
<ul>
<li>Ubuntu  : <code>sudo apt install cloudflare-warp</code></li>
<li>RHEL/CentOS : <code>sudo yum install cloudflare-warp</code></li>
<li>Arch    : <code>yay -Syu cloudflare-warp-bin</code></li>
</ul>
<h3 id="register-and-connect">Register and Connect</h3>
<p>You have to register for the first time</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">warp-cli register
</code></pre></div><p>Now connect to WARP</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">warp-cli connect
</code></pre></div><p>Run <code>curl https://www.cloudflare.com/cdn-cgi/trace/</code> if the output shows <code>warp=on</code> you&rsquo;re successfully connected to WARP.</p>
<p>To disconnect from WARP</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">warp-cli disconnect
</code></pre></div><h3 id="enable-service">Enable Service</h3>
<p>You can enable WARP service if you don&rsquo;t want to enter password after every boot.</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">systemctl <span style="color:#81a1c1">enable</span> --now warp-svc
</code></pre></div><h3 id="always-stay-connected-to-warp">Always Stay Connected to WARP</h3>
<p>You may want to use WARP all the time. To do that run this command.</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">warp-cli enable-always-on
</code></pre></div><p>Or else it&rsquo;s not necessary.</p>
<p>To check all available commands run <code>warp-cli -h</code>.</p>
<h2 id="method-2--wgcf">Method 2 : WGCF</h2>
<p><a href="https://github.com/ViRb3/wgcf"><strong>WGCF</strong></a> is an unofficial, cross-platform CLI for Cloudflare Warp. It works with Wireguard. So before installing <strong>WGCF</strong> make sure you&rsquo;ve installed</p>
<ul>
<li>
<p><code>wireguard-tools</code></p>
</li>
<li>
<p><code>wireguard-dkms</code> (if you&rsquo;re using a Linux Kernel older than 5.6)</p>
</li>
<li>
<p><code>resolvconf</code> (as <a href="https://gitlab.com/fazlerabbi37/">@fazlerabbi</a> informed me that he couldn&rsquo;t find resolvconf preinstalled on some operating systems)</p>
</li>
</ul>
<blockquote>
<p>Note : You&rsquo;ve to restart your system if you install wireguard-dkms.</p>
</blockquote>
<p>You can install pre-compiled binary file from it&rsquo;s <a href="https://github.com/ViRb3/wgcf/releases">releases</a> or you can install it from AUR if you&rsquo;re using Arch derivatives.</p>
<h3 id="install-binary-package">Install binary package</h3>
<p>Download the package you need from release page. Then rename the file <code>wgcf</code>, make it executable and copy it to <code>/bin</code> directory.</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">chmod +x wgcf
sudo cp wgcf /bin
</code></pre></div><p>Or you can install from AUR if you use Arch</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">yay -S wgcf
</code></pre></div><p>Now we will create a Warp account</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">wgcf register
</code></pre></div><p>And generate a Wireguard configuration using that account information</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">wgcf generate
</code></pre></div><p>We&rsquo;ve to connect to Warp using that Wireguard configuration. It&rsquo;d be much easier if you put that configuration file in <code>/etc/wireguard</code></p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo cp wgcf-profile.conf /etc/wireguard
</code></pre></div><p>Let&rsquo;s connect now</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">wg-quick up wgcf-profile
</code></pre></div><p>If you want to disconnect, run</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">wg-quick down wgcf-profile
</code></pre></div><p>Probably you&rsquo;d like to run Warp every time when your system boots. You can do that with help of systemd</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">systemctl <span style="color:#81a1c1">enable</span> --now wireguard@wgcf-profile
</code></pre></div><h3 id="troubleshoot">Troubleshoot</h3>
<p>I&rsquo;m facing some issue frequently. For some unknown reason Wireguard can&rsquo;t connect through my generated configuration profile multiple times. I&rsquo;ve found a way out to resolve that. If you face the same issue you&rsquo;ve to delete the previous profiles and regenerate new one, except your account profile. To do that you can run this :</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">sudo rm -rf wgcf-profile.conf <span style="color:#81a1c1">&amp;&amp;</span> wgcf generate <span style="color:#81a1c1">&amp;&amp;</span> sudo rm -rf /etc/wireguard/wgcf-profile.conf <span style="color:#81a1c1">&amp;&amp;</span> sudo cp wgcf-profile.conf /etc/wireguard
</code></pre></div><p>Now start the service again. If you want, you can set an alias for this or make a bash script for convenient usage.</p>
<h2 id="getting-warp-plus-data-for-free">Getting Warp Plus Data for Free</h2>
<p>There&rsquo;s a python script from <a href="https://github.com/ALIILAPRO/warp-plus-cloudflare">alilapro</a> to get free Warp Plus data. We can use that Warp Plus data in Linux also. But we need to get a Device ID to run that. To do that go to <code>wgcf-account.toml</code> and copy the <code>device id</code>. You can use that ID in alilapro script to get free Warp Plus data.</p>
<h3 id="link-your-warp-account-with-other-device-using-1111">Link your Warp account with other device using 1.1.1.1</h3>
<ul>
<li>
<p>Open 1.1.1.1 app. I&rsquo;m using Android here.</p>
</li>
<li>
<p>From hamburger menu go to <code>Account</code> &gt; <code>Key</code>. Copy the key and save it somewhere else we will need this.</p>
</li>
<li>
<p>Go to <code>Advanced</code> &gt; <code>Diagonistics</code> (optional)</p>
</li>
<li>
<p>Under <code>Client Configuration</code> you&rsquo;ll see a ID. Copy that and save it. (optional)</p>
</li>
</ul>
<p>Now we&rsquo;ve to put our license key into <code>wgcf-account.toml</code>. Open the toml file, replace the existing license key with yours and update your configuration profile using <code>wgcf update</code> and repeat the previous process.</p>
<div class="highlight"><pre tabindex="0" style="color:#d8dee9;background-color:#2e3440;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">wgcf update
sudo cp wgcf-profile.conf /etc/wireguard
</code></pre></div><p>Now you can use Device ID which you got from toml file or Configuration ID of your 1.1.1.1 in alilapro script.</p>
]]></content:encoded></item></channel></rss>